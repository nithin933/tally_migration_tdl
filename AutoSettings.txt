;[#Menu: ExpressIntegration]
;	
;	Add: Button: Auto Settings 
	
		[Button: Auto Settings]
			
			Title: "Import Settings"
			Key: Ctrl + F9
			Action : Call: AutoSettings

[Function : AutoSettings]
	
;	05 : If : Not $AutoSettingCompleted:Company:##SVCurrentCompany

	10 : Call : VoucherTypeSetup
	20 : Call : LedgerSetup
;	22 : Call : TaxLedgerSetup
;	24 : Call : GroupSetup
;	25 : Call : CreateStockUnits
;	26 : Call : CreateStockItems
;	30 : Modify Object : (Company,##SVCurrentCompany).AutoSettingCompleted[1].AutoSettingCompleted : Yes
;	50 : End If

	[System: UDF]

		AutoSettingCompleted : Logical: 31501

[Function : VoucherTypeSetup]

	
	Variable : NumberofSteps : Number
	Variable : ProgressCounter : Number

	05 : Set : NumberofSteps : $$NumItems:ListofAutoSettingPurchaseVoucherType
	09 : Start Progress : ##NumberofSteps : "Auto Setting" : "Creating VoucherType"
	10 : Walk Collection : List of AutoSetting Purchase VoucherType
	11 : If: $$IsEmpty:($Name:Vouchertype:$Name)
	20 : New Object : VoucherType
	30 : Set Value : Name : $Name
	40 : Set Value : Parent : $Parent
	41 : Set Value : NumberingMethod:$NumberingMethod  
	42 : Set Value : IsOptional : $IsOptional
	43 : Set Value : CommonNarration:$CommonNarration
	44 : Set Value : PreventDuplicates  : Yes
	45 : Create Target 
	46 : Incr : ProgressCounter
	47 : Show Progress : ##ProgressCounter
	48 : End IF
	50 : End Walk
	55 : End Progress
;	60 : Log : "VoucherTypes Created"




[Collection : List of AutoSetting Purchase VoucherType]

		Object : VATPurchase,VATDebitNote1,VATSales, VATCreditNote1;,ReceiptImport,PaymentImport,JournalImport,ContraImport

[Object : VATPurchase]
	
	Name             : "MGN-Purchase"
	Parent           : "Purchase"
	Numbering Method : "Manual"
	CommonNarration  : "Yes"
	
[Object : VATDebitNote1]
	
	Name             : "MGN-Debit Note"
	Parent           : "Debit Note"
	Numbering Method : "Manual"
	CommonNarration  : "Yes"

[Object : VATSales]
	
	Name             : "MGN-Sales"
	Parent           : "Sales"
	Numbering Method : "Manual"
	CommonNarration  : "Yes"

[Object : VATCreditNote1]
	
	Name             : "MGN-Credit Note"
	Parent           : "Credit Note"
	Numbering Method : "Manual"
	CommonNarration  : "Yes"

[Object : ReceiptImport]
	
	Name             : "Receipt-Import"
	Parent           : "Receipt"
	Numbering Method : "Manual"
	CommonNarration  : "Yes"

[Object : PaymentImport]
	
	Name             : "Payment-Import"
	Parent           : "Payment"
	Numbering Method : "Manual"
	CommonNarration  : "Yes"
	
[Object : JournalImport]
	
	Name             : "Journal-Import"
	Parent           : "Journal"
	Numbering Method : "Manual"
	CommonNarration  : "Yes"

[Object : ContraImport]
	
	Name             : "Contra-Import"
	Parent           : "Contra"
	Numbering Method : "Manual"
	CommonNarration  : "Yes"



[Function : LedgerSetup]
	
	Variable : NumberofSteps : Number
	Variable : ProgressCounter : Number

	05 : Set : NumberofSteps : $$NumItems:ListofAutoSettingPurchaseLedgers
	09 : Start Progress : ##NumberofSteps : "Auto Setting" : "Creating Ledgers"
	10 : Walk Collection : List of AutoSetting Purchase Ledgers
	11 : If: $$IsEmpty:($Name:Ledger:$Name)
	20 : New Object : Ledger
	30 : Set Value : Name : $Name
	40 : Set Value : Parent : $Parent
	41 : Set Value: TaxApplicable : $IsTaxApplicable
	41a : Set Value: TypeofSupply : $TypeofSupply
	42 : Create Target 
	45 : Incr : ProgressCounter
	46 : Show Progress : ##ProgressCounter
	47 : End if
	50 : End Walk
	55 : End Progress
;	60 : Log : "Ledgers Created"



[Collection : List of AutoSetting Purchase Ledgers]
		
		Object : VATPurchaseLed,VATSalesLed,VATRoundoffLed,VATTransportingandFreight,SuspenseLed, BankLed


[Object : VATPurchaseLed]
	
	Name : "VAT Purchase"
	Parent : "Purchase Accounts"
	IsTaxApplicable : $$SysName:Applicable
	TypeofSupply : "Goods"
	
[Object : VATSalesLed]
	
	Name : "VAT Sales"
	Parent : "Sales Accounts"
	IsTaxApplicable : $$SysName:Applicable
	TypeofSupply : "Goods"
	
[Object : VATRoundOffLed]
	
	Name : "Round Off"
	Parent : "Indirect Expenses"
	IsTaxApplicable : $$SysName:NotApplicable
	TypeofSupply : $$SysName:Undefined
	
[Object: VATTransportingandFreight]
	
	Name : "Transporting and Freight"
	Parent : "Indirect Expenses"
	IsTaxApplicable : $$SysName:NotApplicable
	TypeofSupply : $$SysName:Undefined

[Object: SuspenseLed]
	
	Name : "Suspense"
	Parent : "Suspense A/c"
	IsTaxApplicable : $$SysName:NotApplicable
	TypeofSupply : $$SysName:Undefined
	
[Object: BankLed]
	
	Name : "BANK"
	Parent : "Bank Accounts"
	IsTaxApplicable : $$SysName:NotApplicable
	TypeofSupply : $$SysName:Undefined


[Function : TaxLedgerSetup]
	
	Variable : NumberofSteps : Number
	Variable : ProgressCounter : Number

	05 : Set : NumberofSteps : $$NumItems:ListofAutoSettingDutiesLedgers
	09 : Start Progress : ##NumberofSteps : "Auto Setting" : "Creating Duty Ledgers"
	10 : Walk Collection : ListofAutoSettingDutiesLedgers
	12 : If: $$IsEmpty:($Name:Ledger:$Name)
	20 : New Object : Ledger
	30 : Set Value : Name : $Name
	40 : Set Value : Parent : $Parent
	41 : Set Value: Tax Type: $TaxType
	41a : Set Value: TaxDutyHead : $TaxDutyHead
	42 : Create Target 
	45 : Incr : ProgressCounter
	46 : Show Progress : ##ProgressCounter
	48 : End If
	50 : End Walk
	55 : End Progress
;	60 : Log : "Ledgers Created"



[Collection : List of AutoSetting Duties Ledgers]
		
		Object : VATOutputTax,VATInputTax,VATReverseCharge,VATTcsOnSales,VATTcsonPurchase


[Object : VATOutputTax]
	
	Name : "Output VAT 5%"
	Parent : "Duties & Taxes"
	TaxType : "VAT"
	TaxDutyHead : "Output Tax"

[Object : VATInputTax]
	
	Name : "Input VAT 5%"
	Parent : "Duties & Taxes"
	TaxType : "VAT"
	TaxDutyHead : "Input Tax"

[Object : VATReverseCharge]
	
	Name : "VAT Reverse Charge"
	Parent : "Duties & Taxes"
	TaxType : "VAT"
	TaxDutyHead : "Reverse Charge"
	

;; Removed Cess as it's not applicable in UAE VAT

[Object: VATTcsOnSales]
	
	Name : "TCS On Sales"
	Parent : "Duties & Taxes"
	TaxType : "Others"
	TaxDutyHead : ""

[Object: VATTcsonPurchase]
	
	Name : "TCS on Purchase"
	Parent : "Duties & Taxes"
	TaxType : "Others"
	TaxDutyHead : ""
	














[Function : GroupSetup]
	
	Variable : NumberofSteps : Number
	Variable : ProgressCounter : Number

	05 : Set : NumberofSteps : $$NumItems:ListofAutoSettingGroup
	09 : Start Progress : ##NumberofSteps : "Auto Setting" : "Creating Groups"
	10 : Walk Collection : List of AutoSetting Group
	12 : If: $$IsEmpty:($Name:Group:$Name)
	20 : 	New Object : Group
	30 : 	Set Value : Name : $Name
	40 : 	Set Value : Parent : "Sundry Debtors"
	42 : 	Create Target 
	43 : End If
	45 : Incr : ProgressCounter
	46 : Show Progress : ##ProgressCounter
	50 : End Walk
	55 : End Progress
;	60 : Log : "Group Created"




[Collection : List of AutoSetting Group]
	
	Object :UnidentifiedGroup
	Fetch : Parent

[Object : UnidentifiedGroup]
	
	Name :"NEW UNIDENTIFIED LEDGERS"
	Parent :"Sundry Debtors" 

;;Gunny Bags


[Function : CreateStockUnits]
	
	Variable : NumberofSteps : Number
	Variable : ProgressCounter : Number


	08 : If: $$IsEmpty:($Name:Unit:"U")
	20 : New Object : Unit
	30 : Set Value : Name : "Pcs"
	32 : Set Value : ISSIMPLEUNIT : Yes
	33 : Set Value : DECIMALPLACES : 0
	42 : Create Target 
;	43 : Log : "Units are Created"
	45 : End If

;[Function : CreateStockITems]
;	
;	Variable : NumberofSteps : Number
;	Variable : ProgressCounter : Number
;
;	05 : Set : NumberofSteps : $$NumItems:ListofAutoSettingStockItems
;	09 : Start Progress : ##NumberofSteps : "Auto Setting" : "Creating StockItems"
;	10 : Walk Collection : List of AutoSetting StockItems
;	20 : New Object : StockItem
;	30 : Set Value : Name : $Name
;	40 : Set Value : BaseUnits : $unit
;	42 : Create Target 
;	45 : Incr : ProgressCounter
;	46 : Show Progress : ##ProgressCounter
;	50 : End Walk
;	55 : End Progress
;	60 : Log : "Stock Items Created"
;
;
;
;[Collection : List of AutoSetting StockItems]
;	
;	Object :GunnyBags
;	Fetch : Name,Unit
;	
;[Object : GunnyBags ]
;	
;	Name :"Gunny Bags"
;	Unit :"nos" 
;
;
;	